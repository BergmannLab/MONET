#!/usr/sup/bin/python
'''
'genecentric-bpms' is a script that generates a set of between-pathway modules 
in BPM file format.
'''

import csv

import bpm.cmdargs.bpms # Which command line arguments do we want?
from bpm import conf, geneinter, parallel, partition, prune

parallel.print_progress()

geneinter.load_genes() # Creates global vars geneinter.genes and geneinter.gis

# Calculate the total number of steps so we can measure progress
parallel.steps = conf.M + geneinter.genecount() + sum(parallel.costs.values())

# Create a BPM from every gene and then prune them
bpms = partition.bpms()
bpms = prune.prune(bpms)

outf = open(conf.bpm, 'w+')
out = csv.writer(outf, delimiter='\t')
for i, (mod1, mod2) in enumerate(bpms):
    mod1, mod2 = list(mod1), list(mod2)
    out.writerow(['BPM%d/Module1' % i] + mod1)
    out.writerow(['BPM%d/Module2' % i] + mod2)

parallel.print_progress(final=True)

